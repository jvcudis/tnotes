<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical Notes</title>
    <link>/</link>
    <description>Recent content on Technical Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Jan 2019 12:59:49 +1300</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins Declarative Pipelines Gotcha When Using Multi-Staged Dockerfile</title>
      <link>/jenkins/gotcha-on-multi-staged-dockerfile/</link>
      <pubDate>Thu, 31 Jan 2019 12:59:49 +1300</pubDate>
      
      <guid>/jenkins/gotcha-on-multi-staged-dockerfile/</guid>
      <description>&lt;p&gt;When I tried using the Jenkins &lt;strong&gt;Declarative Pipeline&lt;/strong&gt; to build, test and package a .NET Core lambda within a container using a multi-staged dockerfile, it throws an error saying &lt;code&gt;Cannot retrieve .Id from &#39;docker inspect &amp;lt;x&amp;gt; as &amp;lt;y&amp;gt;&#39;&lt;/code&gt;. The strange thing is that it &lt;em&gt;did&lt;/em&gt; build the different stages successfully. I checked by running &lt;code&gt;docker images&lt;/code&gt; to see what images are currently available in the system. I did a bit of research and found out that it is an existing issue of the Jenkins docker plugin &lt;a href=&#34;https://issues.jenkins-ci.org/browse/JENKINS-44609&#34;&gt;issue&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zipping It Properly</title>
      <link>/lambdas/zipping-it-properly/</link>
      <pubDate>Fri, 07 Dec 2018 16:23:44 +1300</pubDate>
      
      <guid>/lambdas/zipping-it-properly/</guid>
      <description>&lt;p&gt;If you have spent at least two hours of figuring out why your NodeJS lambda is throwing an error that says &lt;code&gt;Cannot find module &#39;/var/task/index&lt;/code&gt; then this is for you.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Databases in the AWS World</title>
      <link>/aws-training/34-databases_in_the_aws_world/</link>
      <pubDate>Fri, 23 Nov 2018 15:12:55 +1300</pubDate>
      
      <guid>/aws-training/34-databases_in_the_aws_world/</guid>
      <description>&lt;p&gt;This talks about the basic database concepts, like what a relational database is. If you are a database admin and have a clear grasp about database management then this section could be skipped. This also tackles the different database solution offerings from AWS aside from the &lt;strong&gt;Relational Database Service (RDS)&lt;/strong&gt;, which are DynamoDB, RedShift, Elasticache, and Aurora.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sanitizing JSON Deployment Payload</title>
      <link>/new-relic/sanitizing-json-deployment-payload/</link>
      <pubDate>Wed, 21 Nov 2018 16:55:11 +1300</pubDate>
      
      <guid>/new-relic/sanitizing-json-deployment-payload/</guid>
      <description>&lt;p&gt;A few weeks ago, I was tasked to create New Relic deployment markers for our applications that have APM enabled. Just to give a background, I am pretty much new to New Relic and found the deployment markers pretty helpful when you want to know (and bl@me!) if someone has added a change that has compromised the performance of your application, &amp;lsquo;coz it&amp;rsquo;s all about traceability these days! Hurrah!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using CloudWatch for EC2 Monitoring</title>
      <link>/aws-training/24_using-cloudwatch-for-ec2-monitoring/</link>
      <pubDate>Fri, 02 Nov 2018 11:30:00 +1300</pubDate>
      
      <guid>/aws-training/24_using-cloudwatch-for-ec2-monitoring/</guid>
      <description>&lt;p&gt;This section talks about EC2 Monitoring &amp;ndash; the default monitoring and monitoring thru CloudWatch. This also talks about CloudWatch offerings and what each CloudWatch feature is can do.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Load Balancers</title>
      <link>/aws-training/23_aws-load-balancers/</link>
      <pubDate>Fri, 02 Nov 2018 10:41:49 +1300</pubDate>
      
      <guid>/aws-training/23_aws-load-balancers/</guid>
      <description>&lt;p&gt;This section will talk about the basics of load balancers, the different types of load balancers AWS currently is offering, how to create them and associate them to an instance and some important points that is commonly asked in the AWS Solutions Architect Assosiate Certification Exam.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AMI Types Root Devices</title>
      <link>/aws-training/22_ami-types-root-devices/</link>
      <pubDate>Fri, 02 Nov 2018 09:16:37 +1300</pubDate>
      
      <guid>/aws-training/22_ami-types-root-devices/</guid>
      <description>&lt;p&gt;This section mainly talks about EC2 AMI types and the root device volumes provided by AWS. This also contains information on what is the difference between the available root device volumes &amp;ndash; EBS and Instance Store.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>